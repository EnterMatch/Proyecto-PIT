USE db_incidencias;


-- ------- CREATE PROCEDURE ----------
DROP PROCEDURE IF EXISTS USP_TB_CLIENTE_CREATE;
DELIMITER //
CREATE PROCEDURE USP_TB_CLIENTE_CREATE (OUT id INT, nombre VARCHAR(30), email VARCHAR(100))
BEGIN
	INSERT INTO `db_incidencias`.`tb_cliente`
				(`nombre_cliente`,
				`email_cliente`)
	VALUES
				(nombre,
				email);
	SELECT LAST_INSERT_ID() INTO id;
END //
DELIMITER ;



-- ------- READ PROCEDURE -----------
DROP PROCEDURE IF EXISTS USP_TB_CLIENTE_READ;
DELIMITER //
CREATE PROCEDURE USP_TB_CLIENTE_READ ()
BEGIN
	SELECT * FROM TB_CLIENTE;
END //
DELIMITER ;


-- ------- UPDATE PROCEDURE ----------
DROP PROCEDURE IF EXISTS USP_TB_CLIENTE_UPDATE;
DELIMITER //
CREATE PROCEDURE USP_TB_CLIENTE_UPDATE(id INT, nombre VARCHAR(30), email VARCHAR(100))
BEGIN
	UPDATE TB_CLIENTE SET 	nombre_cliente = nombre,
							email_cliente = email
	WHERE id_cliente = id;
END
// DELIMITER ;


-- ------- DELETE PROCEDURE -----------
DROP PROCEDURE IF EXISTS USP_TB_CLIENTE_DELETE;
DELIMITER //
CREATE PROCEDURE USP_TB_CLIENTE_DELETE(id INT)
BEGIN
	DELETE FROM TB_CLIENTE WHERE id_cliente = id;
END
// DELIMITER ;


-- -------- OBTAIN PROCEDURE -----------
DROP PROCEDURE IF EXISTS USP_TB_CLIENTE_OBTAIN;
DELIMITER //
CREATE PROCEDURE USP_TB_CLIENTE_OBTAIN (id INT)
BEGIN
	SELECT * FROM TB_CLIENTE
    WHERE id_cliente = id;
END //
DELIMITER ;


-- -------- PROCEDURES ADICIONALES -----------

-- -------- FILTRAR PROCEDURE -----------
DROP PROCEDURE IF EXISTS USP_TB_CLIENTE_FILTRAR;
DELIMITER //
CREATE PROCEDURE USP_TB_CLIENTE_FILTRAR (idEmp INT)
BEGIN
	SELECT * FROM TB_CLIENTE C
    JOIN TB_EMPRESA_CLIENTE EC ON C.ID_CLIENTE = EC.ID_CLIENTE
    WHERE EC.id_empresa = idEmp;
END //
DELIMITER ;
